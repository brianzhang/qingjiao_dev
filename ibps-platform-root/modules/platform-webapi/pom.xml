<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
	    <groupId>com.lc.ibps.platform</groupId>
	    <artifactId>ibps-platform-root</artifactId>
	    <version>2.3.1-SNAPSHOT</version>
	    <relativePath>../../pom.xml</relativePath>
  	</parent>
  
<!--   	<parent>
		<groupId>com.lc.ibps.parent</groupId>
		<artifactId>ibps-starter-parent</artifactId>
		<version>2.3.1-SNAPSHOT</version>
		<relativePath>../../../../ibps-parent-root/modules/starter-parent/pom.xml</relativePath>
	</parent> -->
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lc.ibps.platform</groupId>
  <artifactId>ibps-platform-webapi</artifactId>
  <version>2.3.1-SNAPSHOT</version>
  
  <packaging>war</packaging>
  <name>ibps-platform-webapi</name>
  <description>platform-webapi</description>
  
	<properties>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>com.lc.ibps.platform</groupId>
			<artifactId>ibps-platform-biz</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.common</groupId>
			<artifactId>ibps-org-biz</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.components</groupId>
			<artifactId>ibps-component-upload</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.components</groupId>
			<artifactId>ibps-component-quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.components</groupId>
			<artifactId>ibps-component-mq</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.components</groupId>
			<artifactId>ibps-component-token</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lc.ibps.components</groupId>
			<artifactId>ibps-component-codegen</artifactId>
		</dependency>	
		
		<dependency>
		  <groupId>javax.servlet</groupId>
		  <artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
		</dependency>
	    
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<!-- common-logging 实际调用slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<!-- java.util.logging 实际调用slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
		     <groupId>com.alibaba</groupId>
		     <artifactId>druid</artifactId>
		</dependency>
		<!-- mysql 数据库驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- sqlserver 数据库驱动
		<dependency>
		  	<groupId>com.microsoft.sqlserver</groupId>
		  	<artifactId>sqljdbc4</artifactId>
		</dependency> -->
		<!-- oracle 数据库驱动 -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>oracledriver</artifactId>
		</dependency>

		<!-- jersey start -->
		<dependency>
		    <groupId>org.glassfish.jersey.ext</groupId>
		    <artifactId>jersey-spring3</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-core</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-web</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>org.springframework</groupId>
		            <artifactId>spring-beans</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.media</groupId>
		    <artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.wordnik</groupId>
		    <artifactId>swagger-jersey-jaxrs_2.10</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>com.sun.jersey</groupId>
		            <artifactId>jersey-client</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>com.sun.jersey</groupId>
		            <artifactId>jersey-core</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>com.sun.jersey</groupId>
		            <artifactId>jersey-server</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>com.sun.jersey</groupId>
		            <artifactId>jersey-servlet</artifactId>
		        </exclusion>
		        <exclusion>
		            <groupId>com.sun.jersey</groupId>
		            <artifactId>jersey-multipart</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
		  <groupId>com.sun.jersey</groupId>
		  <artifactId>jersey-servlet</artifactId>
		</dependency>

		<dependency>
            <groupId>org.glassfish.jersey.bundles</groupId>
            <artifactId>jaxrs-ri</artifactId>
        </dependency>
        
        <!-- jersey -->
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
 			
			<plugin> 
				<artifactId>maven-dependency-plugin</artifactId> 
				<configuration> 
					<outputDirectory>${project.build.directory}/lib</outputDirectory> 
					<excludeTransitive>false</excludeTransitive> 
					<stripVersion>false</stripVersion> 
				</configuration> 
			</plugin>
 			
			<plugin>  
			    <artifactId>maven-antrun-plugin</artifactId>  
			    <executions>  
			        <execution>  
			            <phase>package</phase>  
			            <goals>  
			                <goal>run</goal>  
			            </goals>  
			            <configuration>  
			                <tasks>
			                
							    <!--下面设置我自己的日期时间格式-->
							    <tstamp prefix="my">
							        <format property="day" pattern="yyyy-MM-dd"/>
							        <format property="time" pattern="HH:mm:ss"/>
							        <format property="dt" pattern="yyyyMMddHHmmssSSS"/>
							    </tstamp>
			                
			                	<!-- 创建web工程 -->
								<copy todir="${project.build.directory}/platform-rest-${my.dt}/.settings">
			                    	<fileset dir="../../../pkg/platform-web/.settings"/>
			                    </copy>
								<copy todir="${project.build.directory}/platform-rest-${my.dt}">
			                    	<fileset dir="../../../pkg/platform-web/">
			                    		<include name="**/.classpath"/>
			                    		<include name="**/.project"/>
			                    	</fileset>	
			                    </copy>
						   		<copy todir="${project.build.directory}/platform-rest-${my.dt}/resources/conf">
						        	<fileset dir="${project.build.directory}/classes/conf"/>
						        </copy>
			                    <mkdir dir="${project.build.directory}/platform-rest-${my.dt}/src"/>
			                    <copy todir="${project.build.directory}/platform-rest-${my.dt}/web/WEB-INF">
			                    	<fileset dir="src/main/webapp/WEB-INF">
			                    		<include name="**/web.xml"/>
			                    	</fileset>
			                    </copy>
			                    <!-- 创建web工程 -->
			                    
			                	<!-- 创建jar -->
						        <copy todir="${project.build.directory}/${project.build.finalName}-${my.dt}/WEB-INF/classes/conf">
						        	<fileset dir="${project.build.directory}/classes/conf"/>
						        </copy>
						    	<copy todir="${project.build.directory}/${project.build.finalName}-${my.dt}/WEB-INF">
			                    	<fileset dir="src/main/webapp/WEB-INF">
			                    		<include name="**/web.xml"/>
			                    	</fileset>
			                    </copy>
			                    <copy todir="${project.build.directory}/classes/META-INF/resources">
			                    	<fileset dir="src/main/webapp"/>
			                    </copy>
			                   	<!--<exec executable="cmd.exe" dir="../../../pkg/compress">  
						            <arg value="/c"/>
						            <arg value="run.bat"/>
						        </exec>
			                   	<copy todir="${project.build.directory}/classes/META-INF/resources" overwrite="true">
			                    	<fileset dir="../../../pkg/compress/dist"/>
			                    </copy>-->
			                    <delete file="${project.build.directory}/classes/META-INF/resources/WEB-INF/web.xml"/>
			                    <delete dir="${project.build.directory}/classes/conf"/>
			                    <delete dir="${project.build.directory}/classes/template"/>
								<property name="jarfilename" value="${project.build.directory}/${project.build.finalName}-${my.dt}.jar"/>
								<jar jarfile="${jarfilename}" basedir="${project.build.directory}/classes"/>
								<!-- 创建jar includes="com/lc/ibps/web/filter/** com/lc/ibps/web/restConf/**" -->
			                    
								<!-- 创建jar库 -->
			                    <copy todir="${project.build.directory}/lib">
			                    	<fileset dir="${project.build.directory}">
			                    		<include name="${project.build.finalName}-${my.dt}.jar"/>
			                    	</fileset>
			                    </copy>
			                    <!-- 创建jar库 -->
			                    
			                    <!-- 创建war -->
								<war destfile="${project.build.directory}/${project.build.finalName}-${my.dt}.war" webxml="${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml">  
						            <!-- 将非jar和非class文件拷贝到war包的对应路径下。      -->
						            <fileset dir="${project.build.directory}/${project.build.finalName}-${my.dt}"> 
						                <include name="**/**.*"/>
						            </fileset>
						            <!-- 将jar和class文件拷贝到war包的对应路径下。 -->  
						            <lib dir="${project.build.directory}/lib"/>  
						        </war>
						        <!-- 创建war -->
						        
						        <!-- 创建web工程，复制jar库 -->
								<copy todir="${project.build.directory}/platform-rest-${my.dt}/web/WEB-INF/lib">
			                    	<fileset dir="${project.build.directory}/lib"/>			                    
			                    </copy>
			                    <!-- 创建web工程，复制jar库 -->
						        
			                </tasks>  
			            </configuration>  
			        </execution>  
			    </executions>  
			</plugin>
			
		</plugins>
	</build>
  
</project>