<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd     
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
	<security:http entry-point-ref="casAuthenticationEntryPoint" auto-config="true"
		access-denied-page="/commons/noRights.jsp" 
		servlet-api-provision="true">
		<security:custom-filter  ref="aopFilter" position="FIRST" />
		<!-- cas过滤器-->
		<security:custom-filter position="CAS_FILTER" ref="casAuthenticationFilter" />
		<!-- spring单点退出过滤器-->
		<security:custom-filter before="LOGOUT_FILTER" ref="requestSingleLogoutFilter" />   
		<!-- cas单点退出过滤器-->                           
		<security:custom-filter before="CAS_FILTER" ref="singleLogoutFilter"/> 
		<!-- 要权限过滤器-->
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="permissionFilter" />
		<security:custom-filter position="LAST" ref="currentfileFilter" />
	</security:http>
	
	<bean id="aopFilter" class="com.lc.ibps.web.security.filter.AopFilter"></bean>
	<bean id="currentfileFilter" class="com.lc.ibps.web.security.filter.CurrentfileFilter"></bean>
	<!-- cas单点登出-->
	<bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
	<!-- spring单点退出过滤器-->
	<bean id="requestSingleLogoutFilter" 
     	  class="org.springframework.security.web.authentication.logout.LogoutFilter">
       <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <constructor-arg value="${cas.url}/logout?service=${platform.url}"/><!-- 单点退出后的返回页面-->
        <property name="filterProcessesUrl" value="/logout.htm" /><!-- 签听退的的url-->   
    </bean>

	<!-- 单点登陆过程-->
	<bean id="casAuthenticationFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	 	<property name="authenticationSuccessHandler" ref="simpleUrlAuthenticationSuccessHandler"/>  
	</bean>
	
	<!-- 登陆成功后的跳转-->
	<bean id="simpleUrlAuthenticationSuccessHandler"  
	    class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
	    <property name="alwaysUseDefaultTargetUrl" value="true"/>
	    <property name="defaultTargetUrl" value="${platform.homepage}"/>  
	</bean>

	<!-- 认证管理器-->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="casAuthenticationProvider" />
	</security:authentication-manager>

	<!-- cas认证代理-->
	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailProvider" />  
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${cas.url}" />
			</bean>
		</property>
		<property name="key" value="an_id_for_this_auth_provider_only" />
	</bean>

	<!-- 本地spring认证类-->
	<bean id="casAuthenticationUserDetailsService"
		class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService" ref="userDetailProvider" />
	</bean>
	<!-- 本地认证入口-->
	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="${platform.url}/j_spring_cas_security_check" /><!-- 本地认证入口-->
		<property name="sendRenew" value="false" />
	</bean>
	
	<!-- cas登陆入口-->	
	<bean id="casAuthenticationEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${cas.url}/login" /><!-- cas 入口 -->
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>
  	 
    <bean id="userDetailProvider" class="com.lc.ibps.web.security.provider.UserAuthProvider"/>
  <!--使用Spring security提供的过滤器-->
  
	<bean id="permissionFilter" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	 <property name="authenticationManager" ref="authenticationManager" />
	 <property name="accessDecisionManager" ref="accessDecisionManagerHandler" />
	 <property name="securityMetadataSource" ref="securityMetadataSourceHandler" />
	</bean>
	
	
	
 	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
   <bean id="accessDecisionManagerHandler" class="com.lc.ibps.web.security.handler.AccessDecisionManagerHandler"></bean>  
  
    <!-- 确定某一资源可以被哪些角色访问 -->
    <bean id="securityMetadataSourceHandler" class="com.lc.ibps.web.security.handler.SecurityMetadataSourceHandler">  
        <property name="anonymousUrls">
			<set>
				<value>/services</value>
				<value>/error.htm</value>
				<value>/loginRedirect.htm</value>
			</set>
		</property>  
    </bean>
    
       
</beans>